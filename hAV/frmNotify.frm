VERSION 5.00
Begin VB.Form frmNotify 
   BorderStyle     =   3  'Fixed Dialog
   Caption         =   "Notify - (Should not see me!)"
   ClientHeight    =   1140
   ClientLeft      =   150
   ClientTop       =   840
   ClientWidth     =   5025
   ControlBox      =   0   'False
   BeginProperty Font 
      Name            =   "Tahoma"
      Size            =   8.25
      Charset         =   178
      Weight          =   400
      Underline       =   0   'False
      Italic          =   0   'False
      Strikethrough   =   0   'False
   EndProperty
   Icon            =   "frmNotify.frx":0000
   LinkTopic       =   "Form1"
   MaxButton       =   0   'False
   MinButton       =   0   'False
   ScaleHeight     =   1140
   ScaleWidth      =   5025
   ShowInTaskbar   =   0   'False
   StartUpPosition =   3  'Windows Default
   Visible         =   0   'False
   Begin VB.Timer tmrLocalDrvs 
      Enabled         =   0   'False
      Index           =   10
      Interval        =   60000
      Left            =   4440
      Top             =   600
   End
   Begin VB.Timer tmrLocalDrvs 
      Enabled         =   0   'False
      Index           =   9
      Interval        =   60000
      Left            =   3960
      Top             =   600
   End
   Begin VB.Timer tmrLocalDrvs 
      Enabled         =   0   'False
      Index           =   8
      Interval        =   60000
      Left            =   3480
      Top             =   600
   End
   Begin VB.Timer tmrLocalDrvs 
      Enabled         =   0   'False
      Index           =   7
      Interval        =   60000
      Left            =   3000
      Top             =   600
   End
   Begin VB.Timer tmrLocalDrvs 
      Enabled         =   0   'False
      Index           =   6
      Interval        =   60000
      Left            =   2520
      Top             =   600
   End
   Begin VB.Timer tmrLocalDrvs 
      Enabled         =   0   'False
      Index           =   5
      Interval        =   60000
      Left            =   2040
      Top             =   600
   End
   Begin VB.Timer tmrLocalDrvs 
      Enabled         =   0   'False
      Index           =   4
      Interval        =   60000
      Left            =   1560
      Top             =   600
   End
   Begin VB.Timer tmrLocalDrvs 
      Enabled         =   0   'False
      Index           =   3
      Interval        =   60000
      Left            =   1080
      Top             =   600
   End
   Begin VB.Timer tmrLocalDrvs 
      Enabled         =   0   'False
      Index           =   2
      Interval        =   60000
      Left            =   600
      Top             =   600
   End
   Begin VB.Timer tmrLocalDrvs 
      Enabled         =   0   'False
      Index           =   1
      Interval        =   60000
      Left            =   120
      Top             =   600
   End
   Begin VB.Timer tmrNewDrvs 
      Enabled         =   0   'False
      Interval        =   500
      Left            =   120
      Top             =   120
   End
   Begin VB.Menu mnuMenu 
      Caption         =   "Menu"
      Begin VB.Menu mnuScan 
         Caption         =   "Check"
      End
      Begin VB.Menu mnuSettings 
         Caption         =   "Settings"
      End
      Begin VB.Menu mnuSep 
         Caption         =   "-"
      End
      Begin VB.Menu mnuExit 
         Caption         =   "Quit"
      End
   End
End
Attribute VB_Name = "frmNotify"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Explicit

Private Const MF_BYCOMMAND = &H0&

'MsgBoxes Messages
Private Const MSG_RESTART_COMPUTER_EN = "New settings have been set and you must restart your computer to apply them." & vbNewLine & "Would you like to restart it now?"

Private CurDrvCnt   As Long

Private Declare Function GetMenu Lib "user32" (ByVal hWnd As Long) As Long
Private Declare Function GetSubMenu Lib "user32" (ByVal hMenu As Long, ByVal nPos As Long) As Long
Private Declare Function GetMenuItemID Lib "user32" (ByVal hMenu As Long, ByVal nPos As Long) As Long
Private Declare Function SetMenuItemBitmaps Lib "user32" (ByVal hMenu As Long, ByVal nPosition As Long, ByVal wFlags As Long, ByVal hBitmapUnchecked As Long, ByVal hBitmapChecked As Long) As Long
Private Declare Function LoadBitmap Lib "user32" Alias "LoadBitmapA" (ByVal hInstance As Long, ByVal lpBitmapName As String) As Long
Private Function GetWARSettings() As Long
    Dim tmpLong As Long
    
    On Error Resume Next
    tmpLong = GetDWORDValue(RegWinARPath, RegWinAREntry)
    
    'Error means the key isn't present
    If Err.Number <> 0 Then
        Err.Clear
        GetWARSettings = 0
    Else
        GetWARSettings = tmpLong
    End If
End Function
Private Sub Form_Load()
    Dim Reg_R       As Long
    Dim FinalResult As Long
    
    AddImages2Menu
    
    Reg_R = GetWARSettings
    
    If (Reg_R And D_Removable) Then
        'That's ok
    Else
        'Check to see if it's the first time running in this windows
        If GetSetting(LoadResString(IDS_REG_APP_NAME), LoadResString(IDS_REG_SECTION_SETTINGS), LoadResString(IDS_REG_KEY_INSTALLED), False) = False Then
            'It's the first Time
            SaveSetting LoadResString(IDS_REG_APP_NAME), LoadResString(IDS_REG_SECTION_SETTINGS), LoadResString(IDS_REG_KEY_INSTALLED), True
            SaveSetting LoadResString(IDS_REG_APP_NAME), LoadResString(IDS_REG_SECTION_SETTINGS), LoadResString(IDS_REG_KEY_AUTODELETE), vbUnchecked
        Else
            'It's not the first Time
            MsgBox LoadResString(IDS_MSG_SETTINGS_CHANGED), vbApplicationModal Or vbExclamation, LoadResString(IDS_APP_NAME)
        End If
            

        FinalResult = D_Fixed + D_Removable
        SetDWORDValue RegWinARPath, RegWinAREntry, FinalResult
        DoEvents

        If MsgBox(LoadResString(IDS_MSG_RESTART_COMPUTER), vbApplicationModal Or vbQuestion Or vbYesNo, LoadResString(IDS_APP_NAME)) = vbYes Then
            RestartWindows
        End If
    End If
End Sub
Private Sub Form_Unload(Cancel As Integer)
    'Remove the icon added to the taskbar
    ShellTrayRemove
     
    'remove subclassing
    UnSubClass
         
    'tell the program to end itself
    Ending = True
    
    'assure unloading proceeds
    Cancel = False
End Sub
Private Sub mnuExit_Click()
    Call PostMessage(frmNotify.hWnd, WM_CLOSE, 0&, ByVal 0&)
End Sub
Public Sub mnuScan_Click()
    'Made public to allow access from the WndProc
    CheckLocals True
End Sub
Private Sub mnuSettings_Click()
    frmOptions.Show
End Sub
Private Sub tmrLocalDrvs_Timer(Index As Integer)
    If Index < 10 Then
        tmrLocalDrvs(Index).Enabled = False
        tmrLocalDrvs(Index + 1).Enabled = True
        Exit Sub
    End If

    'now it was 10 mins
    tmrLocalDrvs(Index).Enabled = False
        CheckLocals False
    tmrLocalDrvs(1).Enabled = True
End Sub
Private Sub tmrNewDrvs_Timer()
    tmrNewDrvs.Enabled = False
    If Ending = True Then End
    
        GetDrives
        If CurDrvCnt <> (UBound(DrivesList) + 1) Then
            If (CurDrvCnt < (UBound(DrivesList) + 1)) And (CurDrvCnt <> 0) Then
                CheckLocals True
            End If
            CurDrvCnt = UBound(DrivesList) + 1
        End If
    tmrNewDrvs.Enabled = True
End Sub
Private Sub AddImages2Menu()
    Dim Result      As Long
    Dim hMenu       As Long
    Dim hSubMenu    As Long
    Dim mnuID       As Long
    Dim hBitmap     As Long
    
    hMenu = GetMenu(Me.hWnd)
    hSubMenu = GetSubMenu(hMenu, 0) '0 is the first menu
    
    hBitmap = LoadBitmap(App.hInstance, "Scan")
    mnuID = GetMenuItemID(hSubMenu, 0)
    Result = SetMenuItemBitmaps(hMenu, mnuID, MF_BYCOMMAND, hBitmap, hBitmap)

    hBitmap = LoadBitmap(App.hInstance, "Settings")
    mnuID = GetMenuItemID(hSubMenu, 1)
    Result = SetMenuItemBitmaps(hMenu, mnuID, MF_BYCOMMAND, hBitmap, hBitmap)

    hBitmap = LoadBitmap(App.hInstance, "Quit")
    mnuID = GetMenuItemID(hSubMenu, 3)
    Result = SetMenuItemBitmaps(hMenu, mnuID, MF_BYCOMMAND, hBitmap, hBitmap)
End Sub

